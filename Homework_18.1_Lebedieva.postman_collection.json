{
	"info": {
		"_postman_id": "911befe2-463c-4e07-8ff8-7704a01c0656",
		"name": "Homework 18.1 SOAP Lebedieva",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25335595"
	},
	"item": [
		{
			"name": "Is Valid ISBN13 Number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Перевырка статусу відповіді OK\r",
							"pm.test(\"Status code name has OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"// Перевірка типу заголовку Content-Type\r",
							"pm.test(\"Response Content-Type includes XML\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/xml\");\r",
							"});\r",
							"\r",
							"// Перевірка відсутності помилок в загловках\r",
							"pm.test(\"No error headers\", function () {\r",
							"    pm.expect(pm.response.headers.get('Error')).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Перевірка часу відповіді\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"// Перевірка наявності xmlns атрибуту\r",
							"pm.test(\"Namespace attribute exists\", function () {\r",
							"    pm.expect(pm.response.text()).to.include('xmlns:m=\"http://webservices.daehosting.com/ISBN\"');\r",
							"});\r",
							"\r",
							"// Перевірка загловку Date\r",
							"pm.test(\"Date header is a valid string\", function () {\r",
							"    var dateHeader = pm.response.headers.get('Date');\r",
							"    pm.expect(dateHeader).to.be.a('string');\r",
							"    pm.expect(dateHeader).to.not.be.empty;\r",
							"});\r",
							"\r",
							"//  Перевірка відсутності пустої відповіді\r",
							"pm.test(\"Response body is not empty\", function () {\r",
							"    pm.expect(pm.response.text().length).to.be.above(0);\r",
							"});\r",
							"\r",
							"//Перевірка, що результат — це булеве значення\r",
							"pm.test(\"Result is a boolean value\", function () {\r",
							"    let result = /<m:IsValidISBN13Result>(true|false)<\\/m:IsValidISBN13Result>/;\r",
							"    pm.expect(responseBody).to.match(result);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml; charset=utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <soap:Body>\n    <IsValidISBN13 xmlns=\"http://webservices.daehosting.com/ISBN\">\n      <sISBN>978-1-4612-9090-2</sISBN>\n    </IsValidISBN13>\n  </soap:Body>\n</soap:Envelope>"
				},
				"url": {
					"raw": "http://webservices.daehosting.com/services/isbnservice.wso",
					"protocol": "http",
					"host": [
						"webservices",
						"daehosting",
						"com"
					],
					"path": [
						"services",
						"isbnservice.wso"
					]
				},
				"description": "The test is done by calculation on the first 12 digits and compare the result with the checksum number at the end. You have to pass a 13 digits number."
			},
			"response": []
		},
		{
			"name": "Is Valid ISBN10 Number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Перевірка статусу відповіді 200\r",
							"pm.test(\"Status is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Перевірка заголовку Content-Type\r",
							"pm.test(\"Content-Type is text/xml\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"text/xml; charset=utf-8\");\r",
							"});\r",
							"\r",
							"// Перевірка заголовку Server\r",
							"pm.test(\"Server header exists\", function () {\r",
							"    pm.expect(pm.response.headers.get('Server')).to.exist;\r",
							"});\r",
							"\r",
							"// Перевірка тегу Soap\r",
							"pm.test(\"Response contains SOAP Envelope\", function () {\r",
							"    var responseBody = pm.response.text();\r",
							"    pm.expect(responseBody).to.include(\"<soap:Envelope\");\r",
							"});\r",
							"\r",
							"// Перевірка тегу IsValidISBN10Result\r",
							"pm.test(\"Response contains IsValidISBN10Result\", function () {\r",
							"    pm.expect(responseBody).to.include('<m:IsValidISBN10Result>');\r",
							"});\r",
							"\r",
							"// Перевірка тег IsValidISBN10Result не порожній\r",
							"pm.test(\"IsValidISBN10Result is not empty\", function () {\r",
							"    pm.expect(responseBody).to.not.include('<m:IsValidISBN10Result></m:IsValidISBN10Result>');\r",
							"});\r",
							"\r",
							"// Перевірка, що відповідь не порожня\r",
							"pm.test(\"Response body is not empty\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.be.empty;\r",
							"});\r",
							"\r",
							"// Перевірка, що відповідь є коректним XML\r",
							"pm.test(\"Response is valid XML\", function () {\r",
							"    var parseXml = require('xml2js').parseString;\r",
							"    var responseBody = pm.response.text();\r",
							"    \r",
							"    parseXml(responseBody, function (err, result) {\r",
							"        pm.expect(err).to.be.null; // Якщо є помилка парсингу XML, тест провалиться\r",
							"    });\r",
							"});\r",
							"\r",
							"// Перевірка на відсутність помилок у відповіді\r",
							"pm.test(\"No errors in response\", function () {\r",
							"    var responseBody = pm.response.text();\r",
							"    pm.expect(responseBody).to.not.include(\"Fault\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml; charset=utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <soap:Body>\n    <IsValidISBN10 xmlns=\"http://webservices.daehosting.com/ISBN\">\n      <sISBN>0-19-852663-6</sISBN>\n    </IsValidISBN10>\n  </soap:Body>\n</soap:Envelope>"
				},
				"url": {
					"raw": "http://webservices.daehosting.com/services/isbnservice.wso",
					"protocol": "http",
					"host": [
						"webservices",
						"daehosting",
						"com"
					],
					"path": [
						"services",
						"isbnservice.wso"
					]
				},
				"description": "The test is done by calculation on the first 9 digits and compare the result with the checksum number at the end. You have to pass a 10 digits number or 8 digits and an X."
			},
			"response": []
		}
	]
}